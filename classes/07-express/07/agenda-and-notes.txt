Agenda for Today's Lecture

    Introduction to MVC Architecture:
        What is MVC and why is it important?
        Breakdown of Model, View, and Controller.

    Setting up MongoDB Atlas:
        How to connect to MongoDB Atlas using Mongoose.

    Building the MVC Structure:
        Creating Models, Views, and Controllers in Node.js.
        Folder structure for an MVC application.

    Implementing a CRUD Operation using MVC:

        Creating a basic CRUD (Create, Read, Update, Delete) system using the MVC architecture.
        Testing the Application using Postman or a basic React frontend.
=================================================================
1. Introduction to MVC Architecture
    The MVC architecture divides your application into three interconnected parts:

    Model: Represents the data and the business logic. It interacts with the database.

    View: The front-end or user interface (UI). For today, we’ll skip the view since Node.js alone is typically back-end focused, but a React app could serve as the view.

    Controller: Handles the requests from the user, processes the data using the model, and sends responses back.
------------------------------------------------------------------

Why MVC?

    Separation of concerns: MVC divides the app into three distinct components, making it easier to manage and scale.

    Reusability: Each part (Model, View, Controller) can be reused in other parts of the application.

    Maintainability: Because each component is separate, it's easier to maintain and debug.
----------------------------------------------------------------

2. Setting up MongoDB Atlas

    Step 1: Create a MongoDB Atlas Account
        Go to MongoDB Atlas.
        Set up a new project and cluster.
        In the security settings, add your current IP address and create a new database user.
        Copy the MongoDB connection string.

    Step 2: Install Mongoose
        Mongoose will help us interact with MongoDB from our Node.js application:

        npm install mongoose
-------------------------------------------------------------------

3. Building the MVC Structure

    Project Folder Structure
    
    node-mvc/
    │
    ├── models/
    │   └── User.js         # Model
    │
    ├── controllers/
    │   └── userController.js  # Controller
    │
    ├── routes/
    │   └── userRoutes.js      # Routes
    │
    ├── app.js              # Entry Point
    └── package.json


4. Connecting the MVC in app.js
        

5. Testing the Application
    Using Postman:
    Get all users: GET http://localhost:5000/api/users
    Add a user: POST http://localhost:5000/api/users
    Body (JSON): { "name": "John Doe", "email": "john@example.com" }
    Update a user: PUT http://localhost:5000/api/users/:id
    Delete a user: DELETE http://localhost:5000/api/users/:id
